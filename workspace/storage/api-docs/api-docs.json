{
    "swagger": "2.0",
    "info": {
        "title": "VeriCheck Phoenix API ",
        "description": "This is a details documents for VeriCheck Phoenix API",
        "termsOfService": "https://www.vericheck.com/",
        "contact": {
            "name": "VeriCheck API Team",
            "email": "support@vericheck.net"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0.0"
    },
    "host": "backend-api-sit.azurewebsites.net",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/acos": {
            "get": {
                "tags": [
                    "acos"
                ],
                "summary": "Get aco list of acl",
                "description": "Get access control object list of access control list",
                "operationId": "getAco",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AcoGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "acos"
                ],
                "summary": "Add a new aco",
                "description": "Add a new access control object to access control list",
                "operationId": "addAco",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AcoPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AcoGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/acos/{id}": {
            "get": {
                "tags": [
                    "acos"
                ],
                "summary": "Find aco by ID",
                "description": "Get access control object by ID",
                "operationId": "getAcoById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Aco to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AcoGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "put": {
                "tags": [
                    "acos"
                ],
                "summary": "Update an existing aco",
                "description": "Update an existing access control object by ID",
                "operationId": "updateAco",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Aco to update",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AcoPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AcoGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "delete": {
                "tags": [
                    "acos"
                ],
                "summary": "Delete an existing aco by ID",
                "description": "Delete an existing access control object by ID",
                "operationId": "DeleteAco",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Aco to delete",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AcoDeleteData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/aroacos/mapping/{id}": {
            "put": {
                "tags": [
                    "aroacos"
                ],
                "summary": "Update an existing aroaco data in bulk by Model Id",
                "description": "Update an existing aroaco data in bulk by Model Id if user have single or multiple role.",
                "operationId": "bulkUpdateAroAco",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Model ID to update AroAco data in bulk",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AroAcoPutBulkData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AroAcoGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/aroacos/aro/{id}": {
            "get": {
                "tags": [
                    "aroacos"
                ],
                "summary": "Find aroaco permission by ARO ID",
                "description": "Get aroaco(manage permission) object by ARO ID",
                "operationId": "getAroAcobyAroid",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Aro to fetch specified AroId Data",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GetAroAcoDataByAroId"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/aros": {
            "get": {
                "tags": [
                    "aros"
                ],
                "summary": "Get aro list of acl",
                "description": "Get access request object list of access control list",
                "operationId": "getAro",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AroGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the Accept header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "aros"
                ],
                "summary": "Add a new aro to the acl",
                "description": "Add a new access request object to access control list",
                "operationId": "addAro",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AroPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AroGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the Accept header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/aros/{id}": {
            "get": {
                "tags": [
                    "aros"
                ],
                "summary": "Find aro by ID",
                "description": "Find access request object by ID",
                "operationId": "getAroById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Aro to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AroGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the Accept header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "put": {
                "tags": [
                    "aros"
                ],
                "summary": "Update an existing aro by ID",
                "description": "Update an existing access request object by ID",
                "operationId": "updateAro",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Aro to update",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AroPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AroGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the Accept header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "delete": {
                "tags": [
                    "aros"
                ],
                "summary": "Delete an existing aro by ID",
                "description": "Delete an existing access request object by ID",
                "operationId": "DeleteAro",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Aro to delete",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AroDeleteData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type  does not match the Accept header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/banks": {
            "get": {
                "tags": [
                    "banks"
                ],
                "summary": "Get bank list ",
                "description": "Get bank list",
                "operationId": "getBank",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/BankGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/notes": {
            "post": {
                "tags": [
                    "notes"
                ],
                "summary": "Add Business Data",
                "description": "Add Amendment Note",
                "operationId": "addAmendmentNote",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddAmendmentNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AddBusinessInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{id}/banks": {
            "get": {
                "tags": [
                    "assign-banks"
                ],
                "summary": "Get company settlement/billing bank details using company id and type",
                "description": "Get bank of company using company id and type",
                "operationId": "GetCompanyBankData",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "search by bank type i.e settlement/billing",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyBankData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "assign-banks"
                ],
                "summary": "Assign settlement/billing bank to company",
                "description": "Assign settlement/billing bank to company",
                "operationId": "PostCompanyBankData",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostCompanyBankData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/fee": {
            "post": {
                "tags": [
                    "fee"
                ],
                "summary": "Add Business Data",
                "description": "Add Fee",
                "operationId": "addFee",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostTiredPricing"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PostTiredPricing"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/assigngroups": {
            "post": {
                "tags": [
                    "assign-groups"
                ],
                "summary": "Add/Remove Merchant's/ISO's assigned groups",
                "description": "Add/Remove Merchants/ISO's assigned groups",
                "operationId": "addAssignGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AssignGroupPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AssignGroupPostData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/assigngroups/{id}": {
            "get": {
                "tags": [
                    "assign-groups"
                ],
                "summary": "Get iso/merchants assigned groups by using Group ID",
                "description": "Returns a user based on a single ID, if the user does not have access to the pet",
                "operationId": "getAssignGroupById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of AssignGroup to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AssignedGroupList"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/business-data": {
            "get": {
                "tags": [
                    "business-data"
                ],
                "summary": "fetch business data by company id",
                "description": "Get Company business data",
                "operationId": "getCompanyBusinessDataById",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of Company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyBusinessData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "put": {
                "tags": [
                    "business-data"
                ],
                "summary": "Edit Business Data",
                "description": "Edit Business Data",
                "operationId": "editBusinessInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/EditBusinessInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyBusinessData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "business-data"
                ],
                "summary": "Add Business Data",
                "description": "Add Business Data",
                "operationId": "addBusinessData",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddBusinessInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyBusinessData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/addresses": {
            "get": {
                "tags": [
                    "addresses"
                ],
                "summary": "Get all Company Addresses",
                "description": "get all company address data",
                "operationId": "getCompanyAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "records per page count",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "address_type",
                        "in": "query",
                        "description": "Address type: primary or secondary",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "description": "Zip Code",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AddressGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "addresses"
                ],
                "summary": "Add Address",
                "description": "Add Address",
                "operationId": "addAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddressPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GetSingleAddressData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the accepted header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/addresses/{addressId}": {
            "get": {
                "tags": [
                    "addresses"
                ],
                "summary": "Show Company Address",
                "description": "get company address data by company id and address id",
                "operationId": "showCompanyAddress",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "addressId",
                        "in": "path",
                        "description": "ID of company address to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AddressGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "put": {
                "tags": [
                    "addresses"
                ],
                "summary": "Update Address",
                "description": "Update Address",
                "operationId": "updateAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "addressId",
                        "in": "path",
                        "description": "ID of Address to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddressPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GetSingleAddressData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "delete": {
                "tags": [
                    "addresses"
                ],
                "summary": "Delete address by ID",
                "description": "Delete existing address by given ID",
                "operationId": "deleteAddressById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "addressId",
                        "in": "path",
                        "description": "ID of Address to delete",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/AddressDeleteData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "tags": [
                    "companies"
                ],
                "summary": "Get company list",
                "description": "Get company list",
                "operationId": "getCompany",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "records per page count",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sorting parameter. Sort by any get parameter eg -name,type. '-' for descending",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "search by type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "companies"
                ],
                "summary": "Add Company",
                "description": "Add Company",
                "operationId": "addCompany",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}": {
            "get": {
                "tags": [
                    "companies"
                ],
                "summary": "fetch Company by company id",
                "description": "Get Company by id",
                "operationId": "getCompanyById",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of Company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "put": {
                "tags": [
                    "companies"
                ],
                "summary": "Update Company",
                "description": "Update Company",
                "operationId": "updateCompany",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of Company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/activate": {
            "put": {
                "tags": [
                    "companies"
                ],
                "summary": "Activate company (Merchant/ISO)",
                "description": "Activate company (Merchant/ISO)",
                "operationId": "activate",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of Company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyActivate"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/deactivate": {
            "put": {
                "tags": [
                    "companies"
                ],
                "summary": "Deactivate company (Merchant/ISO)",
                "description": "Deactivate company (Merchant/ISO)",
                "operationId": "deactivate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of Company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyDeactivate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyDeactivate"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/contacts": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "Get all Company Contacts",
                "description": "get all contact data",
                "operationId": "getContactId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "records per page count",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sorting parameter. Sort by any get parameter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "search by first name",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "search by last name",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contact_type",
                        "in": "query",
                        "description": "search by contact type: support, executive, principal or references",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "primary_email",
                        "in": "query",
                        "description": "search by primary email",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ContactGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "contacts"
                ],
                "summary": "Add Company Contacts",
                "description": "Create new contact data",
                "operationId": "addContactId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ContactPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ContactGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/contacts/{contactId}": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "Get all Company Contacts",
                "description": "get all contact data",
                "operationId": "showContactId",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "company ID to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "Company contact ID to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ContactGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "put": {
                "tags": [
                    "contacts"
                ],
                "summary": "Edit Company Contacts",
                "description": "Update contact data",
                "operationId": "editContactId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "ID of Contact to update",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ContactPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ContactGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contacts"
                ],
                "summary": "Delete Company Contacts",
                "description": "Delete contact data",
                "operationId": "deleteContactId",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "ID of Contact to delete",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ContactDeleteData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{id}/fedwindows": {
            "get": {
                "tags": [
                    "fedwindows"
                ],
                "summary": "Get companies odfi fed windows",
                "description": "Get companies odfi fed windows",
                "operationId": "GetCompanyFedWindowData",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyFedWindowData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "fedwindows"
                ],
                "summary": "Create/update companies odfi fed windows",
                "description": "Create/update companies odfi fed windows",
                "operationId": "PostCompanyFedWindowData",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostCompanyFedWindowData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyFedWindowData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/fundsecurities": {
            "post": {
                "tags": [
                    "fundsecurities"
                ],
                "summary": "Add FundSecurity",
                "description": "Add FundSecurity",
                "operationId": "addFundSecurity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FundSecurityPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/FundSecurityGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the accepted header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/fundsecurities/{id}": {
            "put": {
                "tags": [
                    "fundsecurities"
                ],
                "summary": "Update FundSecurity",
                "description": "Update FundSecurity",
                "operationId": "updateFundSecurity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Fund Securities to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FundSecurityPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/FundSecurityGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{id}/marketings": {
            "get": {
                "tags": [
                    "marketings"
                ],
                "summary": "Get company marketings",
                "description": "Get company Marketing Details",
                "operationId": "getMarketingByCompanyId",
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/MarketingGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "marketings"
                ],
                "summary": "Add Marketing",
                "description": "Marketing",
                "operationId": "MarketingPostData",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/MarketingPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/MarketingGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{id}/marketings/{marketingId}": {
            "put": {
                "tags": [
                    "marketings"
                ],
                "summary": "Update Marketing Details",
                "description": "Update Marketing Details",
                "operationId": "updateMarketing",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "marketingId",
                        "in": "path",
                        "description": "ID of Marketing to update",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/MarketingPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/MarketingGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{id}/operations": {
            "get": {
                "tags": [
                    "operations"
                ],
                "summary": "Get company (Merchant/ISO) operations",
                "description": "Get company (Merchant/ISO) operations",
                "operationId": "getOperation",
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GetCompanyOperation"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "operations"
                ],
                "summary": "Add/Update company (Merchant/ISO) operation ",
                "description": "Add/Update company (Merchant/ISO) operation ",
                "operationId": "addoperation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyOperation"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/portfolios": {
            "post": {
                "tags": [
                    "portfolios"
                ],
                "summary": "Add Company Portfolio",
                "description": "Create new portfolio data",
                "operationId": "addPortfolioId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PortfolioPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PortfolioGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/portfolios/{portfolioId}": {
            "put": {
                "tags": [
                    "portfolios"
                ],
                "summary": "Edit Company Portfolio",
                "description": "update company portfolio data",
                "operationId": "editPortfolioId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "portfolioId",
                        "in": "path",
                        "description": "company portfolio ID",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PortfolioPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PortfolioGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{id}/underwritings": {
            "get": {
                "tags": [
                    "underwritings"
                ],
                "summary": "Get company (Merchant/ISO) Underwriting",
                "description": "Get company (Merchant/ISO) Underwriting",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GetCompanyUnderwriting"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "underwritings"
                ],
                "summary": "Add/Update company (Merchant/ISO) Underwriting",
                "description": "Add/Update company (Merchant/ISO) Underwriting",
                "operationId": "addUnderwriting",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyUnderwriting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyUnderwriting"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/velocitychecks": {
            "get": {
                "tags": [
                    "velocitychecks"
                ],
                "summary": "Get company Velocitycheck",
                "description": "Get company Velocitycheck",
                "operationId": "getVelocitycheckByCompanyId",
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GetCompanyVelocitycheck"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "put": {
                "tags": [
                    "velocitychecks"
                ],
                "summary": "Update Velocitychecks",
                "description": "Update Velocitychecks",
                "operationId": "VelocityChecksPutData",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of Company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/VelocityChecksPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/VelocityChecksPutData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "velocitychecks"
                ],
                "summary": "Add Velocity Checks",
                "description": "Velocity Checks",
                "operationId": "VelocityChecksPostData",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of Company to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/VelocityChecksPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/VelocityChecksPostData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/companies/{companyId}/verichecks": {
            "get": {
                "tags": [
                    "verichecks"
                ],
                "summary": "Get company Vericheck",
                "description": "Get company Vericheck",
                "operationId": "getVericheckByCompanyId",
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GetCompanyVericheck"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "verichecks"
                ],
                "summary": "Add Vericheck",
                "description": "Add Vericheck",
                "operationId": "addVericheck",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "ID of company",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyVericheck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CompanyVericheck"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u00e2\u20ac\u02dcAccept\u00e2\u20ac\u2122 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Get groups list",
                "description": "Get groups list. Per page, page number and sort parameter can be passed in query.",
                "operationId": "getGroupList",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "records per page count",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sorting parameter. Sort by name or type. Use '-' for desc example: sort=-Name or sort=Name",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GroupGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "groups"
                ],
                "summary": "Add Group",
                "description": "Create new group data",
                "operationId": "addGroupId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GroupPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GroupGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Get group by ID",
                "description": "Retrieve group detail by ID",
                "operationId": "getGroupById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Group to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GroupGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "put": {
                "tags": [
                    "groups"
                ],
                "summary": "Update group by ID",
                "description": "Update existing group by given ID",
                "operationId": "updateGroupId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of group to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GroupPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GroupGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "delete": {
                "tags": [
                    "groups"
                ],
                "summary": "Delete group by ID",
                "description": "Delete existing group by given ID",
                "operationId": "deleteGroupById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Group to delete",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/GroupDeleteData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/sec-codes": {
            "get": {
                "tags": [
                    "sec-codes"
                ],
                "summary": "Get sec code list",
                "description": "Get sec code list. Per page, page number and sort parameter can be passed in query.",
                "operationId": "getSecCodeList",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "records per page count",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sorting parameter. Sort by name or type. Use '-' for desc example: sort=-Name or sort=Name",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "search by code",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "search by status : 1 or 0",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SecCodeGetData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \u2018Accept\u2019 header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "List all users",
                "description": "Get all users list",
                "operationId": "getUsers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/UserData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the Accept header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "description": "Create user using user details",
                "operationId": "addUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserCreateData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/UserFetchData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "description": "Get users details using user ID.This can only be done by the logged in user",
                "operationId": "getUserById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Fetch user using ID",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/UserData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Update user by ID",
                "description": "Update user basic information",
                "operationId": "updateUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to fetch",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserPutData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/UserPutData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "description": "Delete user by ID",
                "operationId": "DeleteUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VeriCheck-Version",
                        "in": "header",
                        "type": "string",
                        "default": "1.0.0"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of User to delete",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Everything worked as expected",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/UserDeleteData"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Often due to a missing request parameter"
                    },
                    "401": {
                        "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
                    },
                    "403": {
                        "description": "Forbidden - Access to the resource by the provider is forbidden"
                    },
                    "404": {
                        "description": "Not found - The requested resource is not found"
                    },
                    "405": {
                        "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
                    },
                    "406": {
                        "description": "Not acceptable - The response content type does not match the \ufffdAccept\ufffd header value"
                    },
                    "409": {
                        "description": "Conflict - If a resource being created already exists"
                    },
                    "415": {
                        "description": "Unsupported media type - The server cannot handle the requested Content-Type"
                    },
                    "422": {
                        "description": "Un-processable entity"
                    },
                    "500": {
                        "description": "Server error - Something went wrong on the Cloud Elements server"
                    }
                }
            }
        }
    },
    "definitions": {
        "ErrorModel": {
            "required": [
                "status",
                "code",
                "message"
            ],
            "properties": {
                "status": {
                    "description": "This is a details documents for VeriCheck Phoenix API",
                    "type": "string"
                },
                "code": {
                    "description": "This is a details documents for VeriCheck Phoenix API",
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "description": "This is a details documents for VeriCheck Phoenix API",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AcoGetData": {
            "properties": {
                "data": {
                    "description": "Definition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Data"
                    }
                },
                "meta": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "AcoData": {
            "properties": {
                "data": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Data"
                }
            },
            "type": "object"
        },
        "AcoPostData": {
            "properties": {
                "parent_id": {
                    "description": "parent_id",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "alias": {
                    "description": "alias",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AcoPutData": {
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "alias": {
                    "description": "alias",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AcoDeleteData": {
            "properties": {
                "id": {
                    "description": "aco id",
                    "type": "string"
                },
                "status": {
                    "description": "status as deleted",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AcoPatchData": {
            "properties": {
                "parent_id": {
                    "description": "parent_id",
                    "type": "string"
                },
                "model": {
                    "description": "model",
                    "type": "string"
                },
                "model_id": {
                    "description": "model_id",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "alias": {
                    "description": "alias",
                    "type": "string"
                },
                "left_node": {
                    "description": "left_node",
                    "type": "string"
                },
                "right_node": {
                    "description": "right_node",
                    "type": "string"
                },
                "etag": {
                    "description": "etag",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Data": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Definition",
                    "properties": {
                        "parent_id": {
                            "description": "property",
                            "type": "string"
                        },
                        "model": {
                            "description": "content",
                            "type": "string"
                        },
                        "model_id": {
                            "description": "created_by",
                            "type": "string"
                        },
                        "name": {
                            "description": "updated_by",
                            "type": "string"
                        },
                        "alias": {
                            "description": "created_at",
                            "type": "string"
                        },
                        "left_node": {
                            "description": "updated_at",
                            "type": "string"
                        },
                        "right_node": {
                            "description": "deleted_at",
                            "type": "string"
                        },
                        "etag": {
                            "description": "deleted_at",
                            "type": "string"
                        },
                        "deleted_at": {
                            "description": "deleted_at",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AroAcoGetData": {
            "properties": {
                "data": {
                    "description": "Definition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AroAco"
                    }
                },
                "meta": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "AroAcoData": {
            "properties": {
                "data": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/AroAco"
                }
            },
            "type": "object"
        },
        "AroAcoPostData": {
            "properties": {
                "aro_id": {
                    "description": "aro_id",
                    "type": "string"
                },
                "aco_id": {
                    "description": "aco_id",
                    "type": "string"
                },
                "access": {
                    "description": "access",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AroAcoPutData": {
            "properties": {
                "access": {
                    "description": "access",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AroAcoPutBulkData": {
            "properties": {
                "aco_id": {
                    "description": "aco_id",
                    "type": "string"
                },
                "access": {
                    "description": "access",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AroAcoDeleteData": {
            "properties": {
                "id": {
                    "description": "aroaco id",
                    "type": "string"
                },
                "status": {
                    "description": "status as deleted",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AroAcoPatchData": {
            "properties": {
                "access": {
                    "description": "access",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GetAroAcoDataByAroId": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Definition",
                    "properties": {
                        "aro_id": {
                            "description": "aro_id",
                            "type": "string"
                        },
                        "aco_id": {
                            "description": "aco_id",
                            "type": "string"
                        },
                        "access": {
                            "description": "access",
                            "type": "integer"
                        },
                        "etag": {
                            "description": "etag",
                            "type": "string"
                        },
                        "deleted_at": {
                            "description": "deleted_at",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AroAco": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Definition",
                    "properties": {
                        "aro_id": {
                            "description": "aro_id",
                            "type": "string"
                        },
                        "aco_id": {
                            "description": "aco_id",
                            "type": "string"
                        },
                        "access": {
                            "description": "access",
                            "type": "integer"
                        },
                        "etag": {
                            "description": "etag",
                            "type": "string"
                        },
                        "deleted_at": {
                            "description": "deleted_at",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AroGetData": {
            "properties": {
                "data": {
                    "description": "Definition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Data"
                    }
                },
                "meta": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "AroData": {
            "properties": {
                "data": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Data"
                }
            },
            "type": "object"
        },
        "AroPostData": {
            "properties": {
                "parent_id": {
                    "description": "parent_id",
                    "type": "string"
                },
                "model_id": {
                    "description": "model_id",
                    "type": "string"
                },
                "model": {
                    "description": "model name",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "alias": {
                    "description": "alias",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AroPutData": {
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "alias": {
                    "description": "alias",
                    "type": "string"
                },
                "model": {
                    "description": "model name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AroDeleteData": {
            "properties": {
                "id": {
                    "description": "aro id",
                    "type": "string"
                },
                "status": {
                    "description": "status as deleted",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AroPatchData": {
            "properties": {
                "parent_id": {
                    "description": "parent_id",
                    "type": "string"
                },
                "model": {
                    "description": "model",
                    "type": "string"
                },
                "model_id": {
                    "description": "model_id",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "alias": {
                    "description": "alias",
                    "type": "string"
                },
                "left_node": {
                    "description": "left_node",
                    "type": "string"
                },
                "right_node": {
                    "description": "right_node",
                    "type": "string"
                },
                "child": {
                    "description": "child",
                    "type": "object"
                },
                "etag": {
                    "description": "etag",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Meta": {
            "properties": {
                "pagination": {
                    "description": "This is a definition for Meta",
                    "type": "object",
                    "$ref": "#/definitions/Pagination"
                }
            },
            "type": "object"
        },
        "Pagination": {
            "properties": {
                "total": {
                    "description": "id",
                    "type": "string"
                },
                "count": {
                    "description": "type",
                    "type": "string"
                },
                "per_page": {
                    "description": "property",
                    "type": "string"
                },
                "current_page": {
                    "description": "content",
                    "type": "string"
                },
                "total_pages": {
                    "description": "created_by",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Links": {
            "properties": {
                "self": {
                    "description": "id",
                    "type": "string"
                },
                "first": {
                    "description": "type",
                    "type": "string"
                },
                "next": {
                    "description": "property",
                    "type": "string"
                },
                "last": {
                    "description": "created_by",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BankGetData": {
            "properties": {
                "data": {
                    "description": "Output response in json format",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Data"
                    }
                },
                "meta": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "BankData": {
            "properties": {
                "data": {
                    "description": "Swagger Definition",
                    "type": "object",
                    "$ref": "#/definitions/Data"
                }
            },
            "type": "object"
        },
        "BankPostData": {
            "properties": {
                "parent_id": {
                    "description": "parent_id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "odfi_id": {
                    "description": "odfi_id",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "doing_business_as": {
                    "description": "doing_business_as",
                    "type": "string"
                },
                "tax_id": {
                    "description": "tax_id",
                    "type": "string"
                },
                "pin_number": {
                    "description": "pin_number",
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                },
                "gateway_id": {
                    "description": "gateway_id",
                    "type": "string"
                },
                "can_issue_credit": {
                    "description": "can_issue_credit",
                    "type": "integer"
                },
                "can_issue_credit_approved": {
                    "description": "can_issue_credit_approved",
                    "type": "integer"
                },
                "can_issue_credit_active": {
                    "description": "can_issue_credit_active",
                    "type": "integer"
                },
                "has_bankstatements": {
                    "description": "has_bankstatements",
                    "type": "integer"
                },
                "has_driver_license": {
                    "description": "has_driver_license",
                    "type": "integer"
                },
                "has_business_license": {
                    "description": "has_business_license",
                    "type": "integer"
                },
                "has_other": {
                    "description": "has_other",
                    "type": "integer"
                },
                "status": {
                    "description": "status",
                    "type": "integer"
                },
                "created_by": {
                    "description": "created_by",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BankPutData": {
            "properties": {
                "parent_id": {
                    "description": "parent_id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "odfi_id": {
                    "description": "odfi_id",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "doing_business_as": {
                    "description": "doing_business_as",
                    "type": "string"
                },
                "tax_id": {
                    "description": "tax_id",
                    "type": "string"
                },
                "pin_number": {
                    "description": "pin_number",
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                },
                "gateway_id": {
                    "description": "gateway_id",
                    "type": "string"
                },
                "can_issue_credit": {
                    "description": "can_issue_credit",
                    "type": "integer"
                },
                "can_issue_credit_approved": {
                    "description": "can_issue_credit_approved",
                    "type": "integer"
                },
                "can_issue_credit_active": {
                    "description": "can_issue_credit_active",
                    "type": "integer"
                },
                "has_bankstatements": {
                    "description": "has_bankstatements",
                    "type": "integer"
                },
                "has_driver_license": {
                    "description": "has_driver_license",
                    "type": "integer"
                },
                "has_business_license": {
                    "description": "has_business_license",
                    "type": "integer"
                },
                "has_other": {
                    "description": "has_other",
                    "type": "integer"
                },
                "status": {
                    "description": "status",
                    "type": "integer"
                },
                "created_by": {
                    "description": "created_by",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BankDeleteData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListBankData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Api for Get all Bank data",
                    "properties": {
                        "parent_id": {
                            "description": "parent_id",
                            "type": "string"
                        },
                        "type": {
                            "description": "type",
                            "type": "string"
                        },
                        "odfi_id": {
                            "description": "odfi_id",
                            "type": "string"
                        },
                        "name": {
                            "description": "name",
                            "type": "string"
                        },
                        "doing_business_as": {
                            "description": "doing_business_as",
                            "type": "string"
                        },
                        "tax_id": {
                            "description": "tax_id",
                            "type": "string"
                        },
                        "website_url": {
                            "description": "website_url",
                            "type": "string"
                        },
                        "pin_number": {
                            "description": "pin_number",
                            "type": "string"
                        },
                        "uuid": {
                            "description": "uuid",
                            "type": "string"
                        },
                        "gateway_id": {
                            "description": "gateway_id",
                            "type": "string"
                        },
                        "can_issue_credit": {
                            "description": "can_issue_credit",
                            "type": "integer"
                        },
                        "can_issue_credit_approved": {
                            "description": "can_issue_credit_approved",
                            "type": "integer"
                        },
                        "can_issue_credit_active": {
                            "description": "can_issue_credit_active",
                            "type": "integer"
                        },
                        "has_bankstatements": {
                            "description": "has_bankstatements",
                            "type": "integer"
                        },
                        "has_driver_license": {
                            "description": "has_driver_license",
                            "type": "integer"
                        },
                        "has_business_license": {
                            "description": "has_business_license",
                            "type": "integer"
                        },
                        "has_other": {
                            "description": "has_other",
                            "type": "integer"
                        },
                        "other": {
                            "description": "other",
                            "type": "string"
                        },
                        "reason_for_deactivation": {
                            "description": "reason_for_deactivation",
                            "type": "string"
                        },
                        "status": {
                            "description": "status",
                            "type": "integer"
                        },
                        "created_by": {
                            "description": "created_by",
                            "type": "string"
                        },
                        "created_at": {
                            "description": "created_at",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "OdfiGetData": {
            "properties": {
                "data": {
                    "description": "Output response in json format",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Data"
                    }
                },
                "meta": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "OdfiData": {
            "properties": {
                "data": {
                    "description": "Swagger Definition",
                    "type": "object",
                    "$ref": "#/definitions/Data"
                }
            },
            "type": "object"
        },
        "OdfiPostData": {
            "properties": {
                "parent_id": {
                    "description": "parent_id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "odfi_id": {
                    "description": "odfi_id",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "doing_business_as": {
                    "description": "doing_business_as",
                    "type": "string"
                },
                "tax_id": {
                    "description": "tax_id",
                    "type": "string"
                },
                "pin_number": {
                    "description": "pin_number",
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                },
                "gateway_id": {
                    "description": "gateway_id",
                    "type": "string"
                },
                "can_issue_credit": {
                    "description": "can_issue_credit",
                    "type": "integer"
                },
                "can_issue_credit_approved": {
                    "description": "can_issue_credit_approved",
                    "type": "integer"
                },
                "can_issue_credit_active": {
                    "description": "can_issue_credit_active",
                    "type": "integer"
                },
                "has_bankstatements": {
                    "description": "has_bankstatements",
                    "type": "integer"
                },
                "has_driver_license": {
                    "description": "has_driver_license",
                    "type": "integer"
                },
                "has_business_license": {
                    "description": "has_business_license",
                    "type": "integer"
                },
                "has_other": {
                    "description": "has_other",
                    "type": "integer"
                },
                "status": {
                    "description": "status",
                    "type": "integer"
                },
                "created_by": {
                    "description": "created_by",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OdfiPutData": {
            "properties": {
                "parent_id": {
                    "description": "parent_id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "odfi_id": {
                    "description": "odfi_id",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "doing_business_as": {
                    "description": "doing_business_as",
                    "type": "string"
                },
                "tax_id": {
                    "description": "tax_id",
                    "type": "string"
                },
                "pin_number": {
                    "description": "pin_number",
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                },
                "gateway_id": {
                    "description": "gateway_id",
                    "type": "string"
                },
                "can_issue_credit": {
                    "description": "can_issue_credit",
                    "type": "integer"
                },
                "can_issue_credit_approved": {
                    "description": "can_issue_credit_approved",
                    "type": "integer"
                },
                "can_issue_credit_active": {
                    "description": "can_issue_credit_active",
                    "type": "integer"
                },
                "has_bankstatements": {
                    "description": "has_bankstatements",
                    "type": "integer"
                },
                "has_driver_license": {
                    "description": "has_driver_license",
                    "type": "integer"
                },
                "has_business_license": {
                    "description": "has_business_license",
                    "type": "integer"
                },
                "has_other": {
                    "description": "has_other",
                    "type": "integer"
                },
                "status": {
                    "description": "status",
                    "type": "integer"
                },
                "created_by": {
                    "description": "created_by",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OdfiDeleteData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListOdfiData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Api for Get all Odfi data",
                    "properties": {
                        "parent_id": {
                            "description": "parent_id",
                            "type": "string"
                        },
                        "type": {
                            "description": "type",
                            "type": "string"
                        },
                        "odfi_id": {
                            "description": "odfi_id",
                            "type": "string"
                        },
                        "name": {
                            "description": "name",
                            "type": "string"
                        },
                        "doing_business_as": {
                            "description": "doing_business_as",
                            "type": "string"
                        },
                        "tax_id": {
                            "description": "tax_id",
                            "type": "string"
                        },
                        "website_url": {
                            "description": "website_url",
                            "type": "string"
                        },
                        "pin_number": {
                            "description": "pin_number",
                            "type": "string"
                        },
                        "uuid": {
                            "description": "uuid",
                            "type": "string"
                        },
                        "gateway_id": {
                            "description": "gateway_id",
                            "type": "string"
                        },
                        "can_issue_credit": {
                            "description": "can_issue_credit",
                            "type": "integer"
                        },
                        "can_issue_credit_approved": {
                            "description": "can_issue_credit_approved",
                            "type": "integer"
                        },
                        "can_issue_credit_active": {
                            "description": "can_issue_credit_active",
                            "type": "integer"
                        },
                        "has_bankstatements": {
                            "description": "has_bankstatements",
                            "type": "integer"
                        },
                        "has_driver_license": {
                            "description": "has_driver_license",
                            "type": "integer"
                        },
                        "has_business_license": {
                            "description": "has_business_license",
                            "type": "integer"
                        },
                        "has_other": {
                            "description": "has_other",
                            "type": "integer"
                        },
                        "other": {
                            "description": "other",
                            "type": "string"
                        },
                        "reason_for_deactivation": {
                            "description": "reason_for_deactivation",
                            "type": "string"
                        },
                        "status": {
                            "description": "status",
                            "type": "integer"
                        },
                        "created_by": {
                            "description": "created_by",
                            "type": "string"
                        },
                        "created_at": {
                            "description": "created_at",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AddAmendmentNote": {
            "properties": {
                "note_id": {
                    "description": "Note Id",
                    "type": "string"
                },
                "note": {
                    "description": "Note",
                    "type": "string"
                },
                "company_id": {
                    "description": "Company Id",
                    "type": "string"
                },
                "field_name": {
                    "description": "Field name",
                    "type": "string"
                },
                "old_value": {
                    "description": "Old value",
                    "type": "string"
                },
                "new_value": {
                    "description": "New value",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "created_by": {
                    "description": "Created by",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AssignGroupGetData": {
            "properties": {
                "data": {
                    "description": "Output response in json format",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Data"
                    }
                },
                "meta": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "AssignGroupData": {
            "properties": {
                "data": {
                    "description": "Swagger Definition",
                    "type": "object",
                    "$ref": "#/definitions/Data"
                }
            },
            "type": "object"
        },
        "AssignGroupPostData": {
            "properties": {
                "group_id": {
                    "description": "group_id",
                    "type": "string"
                },
                "company_ids": {
                    "description": "Create api for AssignGroup",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssignCompanyGroup"
                    }
                }
            },
            "type": "object"
        },
        "AssignGroupDeleteData": {
            "properties": {
                "id": {
                    "description": "group id",
                    "type": "string"
                },
                "status": {
                    "description": "status as deleted",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AssignGroupPutData": {
            "properties": {
                "group_id": {
                    "description": "group_id",
                    "type": "string"
                },
                "company_ids": {
                    "description": "Update api for AssignGroup .",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssignCompanyGroup"
                    }
                }
            },
            "type": "object"
        },
        "AssignCompanyGroup": {
            "type": "string"
        },
        "ListAssignGroupData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Api for Get all AssignGroup data",
                    "properties": {
                        "group_id": {
                            "description": "group_id",
                            "type": "string"
                        },
                        "company_ids": {
                            "description": "Api for Get all AssignGroup data",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssignCompanyGroup"
                            }
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CompanyBusinessData": {
            "properties": {
                "data": {
                    "description": "Swagger Definition",
                    "type": "object",
                    "$ref": "#/definitions/ListCompanyBusinessData"
                }
            },
            "type": "object"
        },
        "ListCompanyBusinessData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "API for Get all Company Business data",
                    "properties": {
                        "company_id": {
                            "description": "Company ID",
                            "type": "string"
                        },
                        "description": {
                            "description": "Description",
                            "type": "string"
                        },
                        "business_type": {
                            "description": "Business type",
                            "type": "string"
                        },
                        "product_service": {
                            "description": "Product service",
                            "type": "string"
                        },
                        "naics_code": {
                            "description": "NAICS code",
                            "type": "integer"
                        },
                        "corporate_structure_id": {
                            "description": "Corporate structure id",
                            "type": "string"
                        },
                        "business_start_date": {
                            "description": "Business start date",
                            "type": "string"
                        },
                        "expected_total_transactions_per_month": {
                            "description": "Expected total transactions per month",
                            "type": "integer"
                        },
                        "expected_total_dollars_per_month": {
                            "description": "Expected total dollars per_month",
                            "type": "integer"
                        },
                        "expected_txn_per_month": {
                            "description": "Expected transactions per month",
                            "type": "integer"
                        },
                        "expected_amount_per_month": {
                            "description": "Expected amount per month",
                            "type": "integer"
                        },
                        "average_txn_amount": {
                            "description": "Average transaction amount",
                            "type": "integer"
                        },
                        "etag": {
                            "description": "Updated At",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AddBusinessInfo": {
            "properties": {
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "business_type": {
                    "description": "Business type",
                    "type": "string"
                },
                "product_service": {
                    "description": "Product service",
                    "type": "string"
                },
                "naics_code": {
                    "description": "NAICS code",
                    "type": "integer"
                },
                "corporate_structure_id": {
                    "description": "Corporate structure id",
                    "type": "string"
                },
                "business_start_date": {
                    "description": "Business start date",
                    "type": "string"
                },
                "expected_txn_per_month": {
                    "description": "Expected transactions per month",
                    "type": "integer"
                },
                "expected_amount_per_month": {
                    "description": "Expected amount per month",
                    "type": "integer"
                },
                "average_txn_amount": {
                    "description": "Average transaction amount",
                    "type": "integer"
                },
                "expected_total_transactions_per_month": {
                    "description": "Expected total transactions per month",
                    "type": "integer"
                },
                "expected_total_dollars_per_month": {
                    "description": "Expected total dollars per_month",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "EditBusinessInfo": {
            "properties": {
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "business_type": {
                    "description": "Business type",
                    "type": "string"
                },
                "product_service": {
                    "description": "Product service",
                    "type": "string"
                },
                "naics_code": {
                    "description": "NAICS code",
                    "type": "integer"
                },
                "corporate_structure_id": {
                    "description": "Corporate structure id",
                    "type": "string"
                },
                "business_start_date": {
                    "description": "Business start date",
                    "type": "string"
                },
                "expected_txn_per_month": {
                    "description": "Expected transactions per month",
                    "type": "integer"
                },
                "expected_amount_per_month": {
                    "description": "Expected amount per month",
                    "type": "integer"
                },
                "average_txn_amount": {
                    "description": "Average transaction amount",
                    "type": "integer"
                },
                "expected_total_transactions_per_month": {
                    "description": "Expected total transactions per month",
                    "type": "integer"
                },
                "expected_total_dollars_per_month": {
                    "description": "Expected total dollars per_month",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompanyGetData": {
            "properties": {
                "data": {
                    "description": "Output response in json format",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ListCompanyData"
                    }
                },
                "meta": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "CompanyData": {
            "properties": {
                "data": {
                    "description": "Swagger Definition",
                    "type": "object",
                    "$ref": "#/definitions/ListCompanyData"
                }
            },
            "type": "object"
        },
        "CompanyPostData": {
            "properties": {
                "type": {
                    "description": "Company type: iso or merchant",
                    "type": "string"
                },
                "name": {
                    "description": "Company name",
                    "type": "string"
                },
                "doing_business_as": {
                    "description": "Doing business as",
                    "type": "string"
                },
                "tax_id": {
                    "description": "Tax Id",
                    "type": "string"
                },
                "created_by": {
                    "description": "Created by",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompanyPutData": {
            "properties": {
                "type": {
                    "description": "Company type: iso or merchant",
                    "type": "string"
                },
                "name": {
                    "description": "Company name",
                    "type": "string"
                },
                "doing_business_as": {
                    "description": "Doing business as",
                    "type": "string"
                },
                "tax_id": {
                    "description": "Tax Id",
                    "type": "string"
                },
                "website_url": {
                    "description": "Web site URL",
                    "type": "string"
                },
                "created_by": {
                    "description": "created_by",
                    "type": "string"
                },
                "sec_codes": {
                    "description": "Update api for Company .",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanyPutSecCodeData"
                    }
                }
            },
            "type": "object"
        },
        "CompanyPutSecCodeData": {
            "type": "string"
        },
        "CompanyDeleteData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompanyDeactivate": {
            "properties": {
                "reason_for_deactivation": {
                    "description": "reason_for_deactivation",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompanyActivate": {
            "properties": {
                "reason_for_deactivation": {
                    "description": "reason_for_deactivation",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListCompanyData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Api for Get all Company data",
                    "properties": {
                        "parent_id": {
                            "description": "parent_id",
                            "type": "string"
                        },
                        "type": {
                            "description": "type",
                            "type": "string"
                        },
                        "odfi_id": {
                            "description": "odfi_id",
                            "type": "string"
                        },
                        "name": {
                            "description": "name",
                            "type": "string"
                        },
                        "doing_business_as": {
                            "description": "doing_business_as",
                            "type": "string"
                        },
                        "tax_id": {
                            "description": "tax_id",
                            "type": "string"
                        },
                        "website_url": {
                            "description": "website_url",
                            "type": "string"
                        },
                        "pin_number": {
                            "description": "pin_number",
                            "type": "string"
                        },
                        "uuid": {
                            "description": "uuid",
                            "type": "string"
                        },
                        "gateway_id": {
                            "description": "gateway_id",
                            "type": "string"
                        },
                        "can_issue_credit": {
                            "description": "can_issue_credit",
                            "type": "integer"
                        },
                        "can_issue_credit_approved": {
                            "description": "can_issue_credit_approved",
                            "type": "integer"
                        },
                        "can_issue_credit_active": {
                            "description": "can_issue_credit_active",
                            "type": "integer"
                        },
                        "has_bankstatements": {
                            "description": "has_bankstatements",
                            "type": "integer"
                        },
                        "has_driver_license": {
                            "description": "has_driver_license",
                            "type": "integer"
                        },
                        "has_business_license": {
                            "description": "has_business_license",
                            "type": "integer"
                        },
                        "has_other": {
                            "description": "has_other",
                            "type": "integer"
                        },
                        "other": {
                            "description": "other",
                            "type": "string"
                        },
                        "reason_for_deactivation": {
                            "description": "reason_for_deactivation",
                            "type": "string"
                        },
                        "status": {
                            "description": "status",
                            "type": "integer"
                        },
                        "created_by": {
                            "description": "created_by",
                            "type": "string"
                        },
                        "created_at": {
                            "description": "created_at",
                            "type": "string"
                        },
                        "sec_codes": {
                            "description": "Api for Get all Company data",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanySecCodesData"
                            }
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CompanySecCodesData": {
            "properties": {
                "id": {
                    "description": "Sec Code ID",
                    "type": "string"
                },
                "code": {
                    "description": "Sec Code",
                    "type": "string"
                },
                "description": {
                    "description": "Sec Code description",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "integer"
                },
                "created_at": {
                    "description": "Company Sec code created at",
                    "type": "integer"
                },
                "etag": {
                    "description": "Company Sec code updated at",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AddressGetData": {
            "properties": {
                "data": {
                    "description": "Output response in json format",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AddressData"
                    }
                },
                "meta": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "AddressData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Swagger Definition",
                    "properties": {
                        "address_line1": {
                            "description": "address_line1",
                            "type": "string"
                        },
                        "address_line2": {
                            "description": "address_line2",
                            "type": "string"
                        },
                        "city": {
                            "description": "city",
                            "type": "string"
                        },
                        "state": {
                            "description": "state",
                            "type": "string"
                        },
                        "zip": {
                            "description": "zip",
                            "type": "integer"
                        },
                        "primary_phone": {
                            "description": "primary_phone",
                            "type": "integer"
                        },
                        "secondary_phone": {
                            "description": "secondary_phone",
                            "type": "integer"
                        },
                        "primary_email": {
                            "description": "primary_email",
                            "type": "string"
                        },
                        "secondary_email": {
                            "description": "secondary_email",
                            "type": "string"
                        },
                        "fax": {
                            "description": "fax",
                            "type": "integer"
                        },
                        "address_type": {
                            "description": "address_type",
                            "type": "string"
                        },
                        "created_at": {
                            "description": "Created At",
                            "type": "integer"
                        },
                        "etag": {
                            "description": "Etag",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GetAllAdresses": {
            "properties": {
                "id": {
                    "description": "Address ID",
                    "type": "string"
                },
                "address_line1": {
                    "description": "address_line1",
                    "type": "string"
                },
                "address_line2": {
                    "description": "address_line2",
                    "type": "string"
                },
                "city": {
                    "description": "city",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                },
                "zip": {
                    "description": "zip",
                    "type": "integer"
                },
                "primary_phone": {
                    "description": "primary_phone",
                    "type": "integer"
                },
                "secondary_phone": {
                    "description": "secondary_phone",
                    "type": "integer"
                },
                "primary_email": {
                    "description": "primary_email",
                    "type": "string"
                },
                "secondary_email": {
                    "description": "secondary_email",
                    "type": "string"
                },
                "fax": {
                    "description": "fax",
                    "type": "integer"
                },
                "address_type": {
                    "description": "address_type",
                    "type": "string"
                },
                "created_at": {
                    "description": "Created At",
                    "type": "integer"
                },
                "etag": {
                    "description": "Etag",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GetSingleAddressData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Swagger Definition",
                    "properties": {
                        "id": {
                            "description": "Address ID",
                            "type": "string"
                        },
                        "address_line1": {
                            "description": "address_line1",
                            "type": "string"
                        },
                        "address_line2": {
                            "description": "address_line2",
                            "type": "string"
                        },
                        "city": {
                            "description": "city",
                            "type": "string"
                        },
                        "state": {
                            "description": "state",
                            "type": "string"
                        },
                        "zip": {
                            "description": "zip",
                            "type": "integer"
                        },
                        "primary_phone": {
                            "description": "primary_phone",
                            "type": "integer"
                        },
                        "secondary_phone": {
                            "description": "secondary_phone",
                            "type": "integer"
                        },
                        "primary_email": {
                            "description": "primary_email",
                            "type": "string"
                        },
                        "secondary_email": {
                            "description": "secondary_email",
                            "type": "string"
                        },
                        "fax": {
                            "description": "fax",
                            "type": "integer"
                        },
                        "address_type": {
                            "description": "address_type",
                            "type": "string"
                        },
                        "created_at": {
                            "description": "Created At",
                            "type": "integer"
                        },
                        "etag": {
                            "description": "Etag",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AddressPostData": {
            "properties": {
                "address_line1": {
                    "description": "address_line1",
                    "type": "string"
                },
                "address_line2": {
                    "description": "address_line2",
                    "type": "string"
                },
                "city": {
                    "description": "city",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                },
                "zip": {
                    "description": "zip",
                    "type": "integer"
                },
                "primary_phone": {
                    "description": "primary_phone",
                    "type": "integer"
                },
                "secondary_phone": {
                    "description": "secondary_phone",
                    "type": "integer"
                },
                "primary_email": {
                    "description": "primary_email",
                    "type": "string"
                },
                "secondary_email": {
                    "description": "secondary_email",
                    "type": "string"
                },
                "fax": {
                    "description": "fax",
                    "type": "integer"
                },
                "address_type": {
                    "description": "address_type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AddressPutData": {
            "properties": {
                "address_line1": {
                    "description": "address_line1",
                    "type": "string"
                },
                "address_line2": {
                    "description": "address_line2",
                    "type": "string"
                },
                "city": {
                    "description": "city",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                },
                "zip": {
                    "description": "zip",
                    "type": "integer"
                },
                "primary_phone": {
                    "description": "primary_phone",
                    "type": "integer"
                },
                "secondary_phone": {
                    "description": "secondary_phone",
                    "type": "integer"
                },
                "primary_email": {
                    "description": "primary_email",
                    "type": "string"
                },
                "secondary_email": {
                    "description": "secondary_email",
                    "type": "string"
                },
                "fax": {
                    "description": "fax",
                    "type": "integer"
                },
                "address_type": {
                    "description": "address_type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AddressDeleteData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompanyBankData": {
            "properties": {
                "data": {
                    "description": "Swagger Definition",
                    "type": "object",
                    "$ref": "#/definitions/GetCompanyBankData"
                }
            },
            "type": "object"
        },
        "PostCompanyBankData": {
            "properties": {
                "routing_number": {
                    "description": "Unique routing number of bank",
                    "type": "string"
                },
                "bank_address": {
                    "description": "Bank address",
                    "type": "string"
                },
                "can_send_email": {
                    "description": "Can company send email or not",
                    "type": "integer"
                },
                "manager_name": {
                    "description": "Bank manager name",
                    "type": "string"
                },
                "manager_email": {
                    "description": "Bank manager email",
                    "type": "string"
                },
                "manager_phone": {
                    "description": "Bank manager phone",
                    "type": "string"
                },
                "bank_account_number": {
                    "description": "Bank account number",
                    "type": "string"
                },
                "bank_account_type": {
                    "description": "Bank account type",
                    "type": "string"
                },
                "billing_email_address": {
                    "description": "Billing email address",
                    "type": "string"
                },
                "type": {
                    "description": "Bank account type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetCompanyBankData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Api for get company bank data using type and company id",
                    "properties": {
                        "company_id": {
                            "description": "Company id",
                            "type": "string"
                        },
                        "routing_number": {
                            "description": "Unique routing number of bank",
                            "type": "string"
                        },
                        "bank_address": {
                            "description": "Bank address",
                            "type": "string"
                        },
                        "can_send_email": {
                            "description": "Can company send email or not",
                            "type": "integer"
                        },
                        "manager_name": {
                            "description": "Bank manager name",
                            "type": "string"
                        },
                        "manager_email": {
                            "description": "Bank manager email",
                            "type": "string"
                        },
                        "manager_phone": {
                            "description": "Bank manager phone",
                            "type": "string"
                        },
                        "bank_account_number": {
                            "description": "Bank account number",
                            "type": "string"
                        },
                        "bank_account_type": {
                            "description": "Bank account type",
                            "type": "string"
                        },
                        "billing_email_address": {
                            "description": "Billing email address",
                            "type": "string"
                        },
                        "type": {
                            "description": "Bank account type",
                            "type": "string"
                        },
                        "effective_start_date": {
                            "description": "Effective start date of bank",
                            "type": "string"
                        },
                        "effective_end_date": {
                            "description": "Effective end date of bank",
                            "type": "string"
                        },
                        "etag": {
                            "description": "Etag",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CompanyFedWindowData": {
            "properties": {
                "data": {
                    "description": "Swagger Definition",
                    "type": "object",
                    "$ref": "#/definitions/GetCompanyFedWindowData"
                }
            },
            "type": "object"
        },
        "PostCompanyFedWindowData": {
            "properties": {
                "odfi_id": {
                    "description": "Unique odfi id",
                    "type": "string"
                },
                "odfi_fed_window_ids": {
                    "description": "Create API for create/update company odfi fed windows",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FedWindowIds"
                    }
                }
            },
            "type": "object"
        },
        "FedWindowIds": {
            "type": "string"
        },
        "GetCompanyFedWindowData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Api for get company odfi fed windows list",
                    "properties": {
                        "company_id": {
                            "description": "Company id",
                            "type": "string"
                        },
                        "fed_window_id": {
                            "description": "Unique odfi fed window id",
                            "type": "string"
                        },
                        "has_enable": {
                            "description": "Suggests status is window open(1) or closed(0) ",
                            "type": "integer"
                        },
                        "fed_start_timing": {
                            "description": "fed window start timing",
                            "type": "string"
                        },
                        "fed_end_timing": {
                            "description": "fed window end timing",
                            "type": "string"
                        },
                        "type": {
                            "description": "fed window type",
                            "type": "integer"
                        },
                        "etag": {
                            "description": "Etag",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AssignedGroupList": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateGroupAssignement": {
            "properties": {
                "group_id": {
                    "description": "Group id of assigned group",
                    "type": "string"
                },
                "company_ids": {
                    "description": "Comma separated company ids",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompanyOperation": {
            "properties": {
                "gateway_id": {
                    "description": "Gateway source for the operation",
                    "type": "string"
                },
                "can_issue_credit": {
                    "description": "Can merchant want to issue credit",
                    "type": "boolean"
                },
                "can_issue_credit_approved": {
                    "description": "Can merchant issue credit approved",
                    "type": "boolean"
                },
                "can_issue_credit_active": {
                    "description": "Can merchant issue the credit",
                    "type": "boolean"
                },
                "reason_for_deactivation": {
                    "description": "merchant reason for service deactivation",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompanyUnderwriting": {
            "properties": {
                "has_bank_statements": {
                    "description": "Can merchant want to issue credit",
                    "type": "boolean"
                },
                "has_driver_license": {
                    "description": "Can merchant issue credit approved",
                    "type": "boolean"
                },
                "has_business_license": {
                    "description": "Can merchant issue the credit",
                    "type": "boolean"
                },
                "has_other": {
                    "description": "merchant reason for service deactivation",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetCompanyOperation": {
            "properties": {
                "data": {
                    "description": "Get Company Operation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanyOperation"
                    }
                }
            },
            "type": "object"
        },
        "GetCompanyUnderwriting": {
            "properties": {
                "data": {
                    "description": "Get Company Underwriting",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanyUnderwriting"
                    }
                }
            },
            "type": "object"
        },
        "CompanyVericheck": {
            "properties": {
                "parent_id": {
                    "description": "Parent Id",
                    "type": "string"
                },
                "pin_number": {
                    "description": "Company unique pin number.",
                    "type": "string"
                },
                "uuid": {
                    "description": "Company unique Uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetCompanyVericheck": {
            "properties": {
                "data": {
                    "description": "Get Company Vericheck",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanyVericheck"
                    }
                }
            },
            "type": "object"
        },
        "ContactGetData": {
            "properties": {
                "data": {
                    "description": "Definition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContactData"
                    }
                },
                "meta": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "ContactData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Definition",
                    "properties": {
                        "company_id": {
                            "description": "Company ID",
                            "type": "string"
                        },
                        "first_name": {
                            "description": "First Name",
                            "type": "string"
                        },
                        "last_name": {
                            "description": "Last Name",
                            "type": "string"
                        },
                        "phone": {
                            "description": "Phone",
                            "type": "integer"
                        },
                        "mobile": {
                            "description": "Mobile",
                            "type": "integer"
                        },
                        "primary_email": {
                            "description": "Primary Email ID",
                            "type": "string"
                        },
                        "secondary_email": {
                            "description": "Secondary Email ID",
                            "type": "integer"
                        },
                        "fax": {
                            "description": "Fax Number",
                            "type": "integer"
                        },
                        "email_format": {
                            "description": "Email Format : html or text",
                            "type": "string"
                        },
                        "contact_type": {
                            "description": "Contact Type: support, principal, executive or references",
                            "type": "string"
                        },
                        "created_at": {
                            "description": "Contact created at",
                            "type": "integer"
                        },
                        "etag": {
                            "description": "Contact updated at",
                            "type": "integer"
                        },
                        "address": {
                            "description": "Definition",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContactAddressData"
                            }
                        },
                        "principal": {
                            "description": "Definition",
                            "type": "object",
                            "$ref": "#/definitions/ContactPrincipalData"
                        },
                        "references": {
                            "description": "Definition",
                            "type": "object",
                            "$ref": "#/definitions/ContactReferencesData"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ContactAddressData": {
            "properties": {
                "id": {
                    "description": "Address ID",
                    "type": "string"
                },
                "address_line1": {
                    "description": "Address Line1",
                    "type": "string"
                },
                "address_line2": {
                    "description": "Address Line2",
                    "type": "integer"
                },
                "city": {
                    "description": "City",
                    "type": "string"
                },
                "state": {
                    "description": "State",
                    "type": "string"
                },
                "zip": {
                    "description": "Zip Code",
                    "type": "integer"
                },
                "primary_phone": {
                    "description": "Primary Phone",
                    "type": "integer"
                },
                "secondary_phone": {
                    "description": "Secondary Phone",
                    "type": "integer"
                },
                "email_format": {
                    "description": "Email Format : html or text",
                    "type": "string"
                },
                "primary_email": {
                    "description": "Primary Email",
                    "type": "string"
                },
                "secondary_email": {
                    "description": "Secondary Email",
                    "type": "string"
                },
                "fax": {
                    "description": "Fax",
                    "type": "integer"
                },
                "address_type": {
                    "description": "Address Type",
                    "type": "string"
                },
                "created_at": {
                    "description": "Contact created at",
                    "type": "integer"
                },
                "etag": {
                    "description": "Contact updated at",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContactPrincipalData": {
            "properties": {
                "id": {
                    "description": "Principal ID",
                    "type": "string"
                },
                "contact_id": {
                    "description": "Contact ID",
                    "type": "string"
                },
                "ssn": {
                    "description": "Social Security Number",
                    "type": "integer"
                },
                "driver_license_number": {
                    "description": "Driver License Number",
                    "type": "string"
                },
                "driver_license_state": {
                    "description": "Driver License State",
                    "type": "string"
                },
                "ownership_percentage": {
                    "description": "Ownership Percentage",
                    "type": "integer"
                },
                "effective_start_date": {
                    "description": "Effective Start Date",
                    "type": "integer"
                },
                "effective_end_date": {
                    "description": "Effective End Date",
                    "type": "integer"
                },
                "etag": {
                    "description": "Principal contact updated at",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContactReferencesData": {
            "properties": {
                "id": {
                    "description": "References ID",
                    "type": "string"
                },
                "contact_id": {
                    "description": "Contact ID",
                    "type": "string"
                },
                "account_number": {
                    "description": "Account Number",
                    "type": "integer"
                },
                "has_approved": {
                    "description": "Driver License State",
                    "type": "integer"
                },
                "approved_by": {
                    "description": "Ownership Percentage",
                    "type": "string"
                },
                "approved_at": {
                    "description": "Effective Start Date",
                    "type": "integer"
                },
                "etag": {
                    "description": "Contact references updated at",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContactPostData": {
            "properties": {
                "first_name": {
                    "description": "First name",
                    "type": "string"
                },
                "last_name": {
                    "description": "last type",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone number",
                    "type": "integer"
                },
                "mobile": {
                    "description": "Mobile number",
                    "type": "integer"
                },
                "primary_email": {
                    "description": "Primary email",
                    "type": "string"
                },
                "secondary_email": {
                    "description": "Secondary email",
                    "type": "string"
                },
                "fax": {
                    "description": "Fax",
                    "type": "integer"
                },
                "email_format": {
                    "description": "Email format: html or text",
                    "type": "string"
                },
                "contact_type": {
                    "description": "Contact type: support, principal, executive or references",
                    "type": "string"
                },
                "address": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/ContactPostAddressData"
                },
                "principal": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/ContactPostPrincipalData"
                },
                "references": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/ContactPostReferencesData"
                }
            },
            "type": "object"
        },
        "ContactPutData": {
            "properties": {
                "first_name": {
                    "description": "First name",
                    "type": "string"
                },
                "last_name": {
                    "description": "last type",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone number",
                    "type": "integer"
                },
                "mobile": {
                    "description": "Mobile number",
                    "type": "integer"
                },
                "primary_email": {
                    "description": "Primary email",
                    "type": "string"
                },
                "secondary_email": {
                    "description": "Secondary email",
                    "type": "string"
                },
                "fax": {
                    "description": "Fax",
                    "type": "integer"
                },
                "email_format": {
                    "description": "Email format: html or text",
                    "type": "string"
                },
                "contact_type": {
                    "description": "Contact type: support, principal, executive or references",
                    "type": "string"
                },
                "address": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/ContactPutAddressData"
                },
                "principal": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/ContactPutPrincipalData"
                },
                "references": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/ContactPutReferencesData"
                }
            },
            "type": "object"
        },
        "ContactPostAddressData": {
            "properties": {
                "address_line1": {
                    "description": "Address line 1",
                    "type": "string"
                },
                "address_line2": {
                    "description": "Address line 2",
                    "type": "string"
                },
                "city": {
                    "description": "city",
                    "type": "string"
                },
                "state": {
                    "description": "State",
                    "type": "string"
                },
                "zip": {
                    "description": "Zip",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContactPostPrincipalData": {
            "properties": {
                "ssn": {
                    "description": "Social Security Number",
                    "type": "integer"
                },
                "driver_license_number": {
                    "description": "Driver license number",
                    "type": "string"
                },
                "driver_license_state": {
                    "description": "Driver license state",
                    "type": "string"
                },
                "ownership_percentage": {
                    "description": "Ownership Percentage",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContactPostReferencesData": {
            "properties": {
                "account_number": {
                    "description": "Account Number",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContactPutAddressData": {
            "properties": {
                "id": {
                    "description": "Address ID",
                    "type": "string"
                },
                "address_line1": {
                    "description": "Address line 1",
                    "type": "string"
                },
                "address_line2": {
                    "description": "Address line 2",
                    "type": "string"
                },
                "city": {
                    "description": "city",
                    "type": "string"
                },
                "state": {
                    "description": "State",
                    "type": "string"
                },
                "zip": {
                    "description": "Zip",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContactPutPrincipalData": {
            "properties": {
                "ssn": {
                    "description": "Social Security Number",
                    "type": "integer"
                },
                "driver_license_number": {
                    "description": "Driver license number",
                    "type": "string"
                },
                "driver_license_state": {
                    "description": "Driver license state",
                    "type": "string"
                },
                "ownership_percentage": {
                    "description": "Ownership Percentage",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContactPutReferencesData": {
            "properties": {
                "id": {
                    "description": "References ID",
                    "type": "string"
                },
                "account_number": {
                    "description": "Account Number",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContactDeleteData": {
            "properties": {
                "id": {
                    "description": "Contact ID",
                    "type": "string"
                },
                "status": {
                    "description": "status as deleted",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AddFee": {
            "properties": {
                "fee_id": {
                    "description": "Fee Id",
                    "type": "string"
                },
                "amount_value": {
                    "description": "Amount",
                    "type": "string"
                },
                "percentage_value": {
                    "description": "Percentage",
                    "type": "string"
                },
                "buy_rate": {
                    "description": "Buy Rate",
                    "type": "string"
                },
                "iso_tnterest": {
                    "description": "ISO Interest",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FundSecurityGetData": {
            "properties": {
                "data": {
                    "description": "Output response in json format",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Data"
                    }
                },
                "meta": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Output response in json format",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "FundSecurityData": {
            "properties": {
                "data": {
                    "description": "Swagger Definition",
                    "type": "object",
                    "$ref": "#/definitions/Data"
                }
            },
            "type": "object"
        },
        "FundSecurityPostData": {
            "properties": {
                "has_eligible_nfs": {
                    "description": "has_eligible_nfs",
                    "type": "integer"
                },
                "has_allow_refunds": {
                    "description": "has_allow_refunds",
                    "type": "integer"
                },
                "has_hold_origination": {
                    "description": "has_hold_origination",
                    "type": "integer"
                },
                "has_hold_settlement": {
                    "description": "has_hold_settlement",
                    "type": "integer"
                },
                "has_permanent_hold": {
                    "description": "has_permanent_hold",
                    "type": "integer"
                },
                "embedded_amount": {
                    "description": "embedded_amount",
                    "type": "integer"
                },
                "embedded_discount": {
                    "description": "embedded_discount",
                    "type": "integer"
                },
                "embedded_hold_day": {
                    "description": "embedded_hold_day",
                    "type": "integer"
                },
                "embedded_limit": {
                    "description": "embedded_limit",
                    "type": "integer"
                },
                "convenience_amount": {
                    "description": "convenience_amount",
                    "type": "integer"
                },
                "convenience_discount": {
                    "description": "convenience_discount",
                    "type": "integer"
                },
                "convenience_hold_day": {
                    "description": "convenience_hold_day",
                    "type": "integer"
                },
                "effective_start_date": {
                    "description": "effective_start_date",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FundSecurityPutData": {
            "properties": {
                "has_eligible_nfs": {
                    "description": "has_eligible_nfs",
                    "type": "integer"
                },
                "has_allow_refunds": {
                    "description": "has_allow_refunds",
                    "type": "integer"
                },
                "has_hold_origination": {
                    "description": "has_hold_origination",
                    "type": "integer"
                },
                "has_hold_settlement": {
                    "description": "has_hold_settlement",
                    "type": "integer"
                },
                "has_permanent_hold": {
                    "description": "has_permanent_hold",
                    "type": "integer"
                },
                "embedded_amount": {
                    "description": "embedded_amount",
                    "type": "integer"
                },
                "embedded_discount": {
                    "description": "embedded_discount",
                    "type": "integer"
                },
                "embedded_hold_day": {
                    "description": "embedded_hold_day",
                    "type": "integer"
                },
                "embedded_limit": {
                    "description": "embedded_limit",
                    "type": "integer"
                },
                "convenience_amount": {
                    "description": "convenience_amount",
                    "type": "integer"
                },
                "convenience_discount": {
                    "description": "convenience_discount",
                    "type": "integer"
                },
                "convenience_hold_day": {
                    "description": "convenience_hold_day",
                    "type": "integer"
                },
                "effective_start_date": {
                    "description": "effective_start_date",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "MarketingGetData": {
            "properties": {
                "data": {
                    "description": "Swagger Definition",
                    "type": "object",
                    "$ref": "#/definitions/MarketingData"
                }
            },
            "type": "object"
        },
        "MarketingData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Swagger Definition",
                    "properties": {
                        "target_market": {
                            "description": "target_market",
                            "type": "string"
                        },
                        "projected_applications": {
                            "description": "projected_applications",
                            "type": "string"
                        },
                        "expected_txn_per_month": {
                            "description": "expected_txn_per_month",
                            "type": "integer"
                        },
                        "expected_amount_per_month": {
                            "description": "expected_amount_per_month",
                            "type": "integer"
                        },
                        "average_txn_amount": {
                            "description": "average_txn_amount",
                            "type": "integer"
                        },
                        "portfolio_low": {
                            "description": "portfolio_low",
                            "type": "integer"
                        },
                        "portfolio_high": {
                            "description": "portfolio_high",
                            "type": "integer"
                        },
                        "portfolio_internet": {
                            "description": "portfolio_internet",
                            "type": "integer"
                        },
                        "portfolio_other": {
                            "description": "portfolio_other",
                            "type": "integer"
                        },
                        "geographic_area": {
                            "description": "geographic_area",
                            "type": "string"
                        },
                        "marketing_method": {
                            "description": "marketing_method",
                            "type": "string"
                        },
                        "site_visit_performed": {
                            "description": "site_visit_performed",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MarketingPostData": {
            "properties": {
                "target_market": {
                    "description": "target_market",
                    "type": "string"
                },
                "projected_applications": {
                    "description": "projected_applications",
                    "type": "string"
                },
                "expected_txn_per_month": {
                    "description": "expected_txn_per_month",
                    "type": "integer"
                },
                "expected_amount_per_month": {
                    "description": "expected_amount_per_month",
                    "type": "integer"
                },
                "average_txn_amount": {
                    "description": "average_txn_amount",
                    "type": "integer"
                },
                "portfolio_low": {
                    "description": "portfolio_low",
                    "type": "integer"
                },
                "portfolio_high": {
                    "description": "portfolio_high",
                    "type": "integer"
                },
                "portfolio_internet": {
                    "description": "portfolio_internet",
                    "type": "integer"
                },
                "portfolio_other": {
                    "description": "portfolio_other",
                    "type": "integer"
                },
                "geographic_area": {
                    "description": "geographic_area",
                    "type": "string"
                },
                "marketing_method": {
                    "description": "marketing_method",
                    "type": "string"
                },
                "site_visit_performed": {
                    "description": "site_visit_performed",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MarketingPutData": {
            "properties": {
                "target_market": {
                    "description": "target_market",
                    "type": "string"
                },
                "projected_applications": {
                    "description": "projected_applications",
                    "type": "string"
                },
                "expected_txn_per_month": {
                    "description": "expected_txn_per_month",
                    "type": "integer"
                },
                "expected_amount_per_month": {
                    "description": "expected_amount_per_month",
                    "type": "integer"
                },
                "average_txn_amount": {
                    "description": "average_txn_amount",
                    "type": "integer"
                },
                "portfolio_low": {
                    "description": "portfolio_low",
                    "type": "integer"
                },
                "portfolio_high": {
                    "description": "portfolio_high",
                    "type": "integer"
                },
                "portfolio_internet": {
                    "description": "portfolio_internet",
                    "type": "integer"
                },
                "portfolio_other": {
                    "description": "portfolio_other",
                    "type": "integer"
                },
                "geographic_area": {
                    "description": "geographic_area",
                    "type": "string"
                },
                "marketing_method": {
                    "description": "marketing_method",
                    "type": "string"
                },
                "site_visit_performed": {
                    "description": "site_visit_performed",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MarketingDeleteData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PortfolioGetData": {
            "properties": {
                "data": {
                    "description": "Definition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortfolioData"
                    }
                },
                "meta": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "PortfolioData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Definition",
                    "properties": {
                        "company_id": {
                            "description": "Company ID",
                            "type": "string"
                        },
                        "has_portfolio": {
                            "description": "has portfolio",
                            "type": "integer"
                        },
                        "projected_applications": {
                            "description": "projected applications",
                            "type": "string"
                        },
                        "expected_txn_per_month": {
                            "description": "expected transaction per month",
                            "type": "integer"
                        },
                        "expected_amount_per_month": {
                            "description": "expected amount per month",
                            "type": "integer"
                        },
                        "existing_portfolio": {
                            "description": "existing portfolio",
                            "type": "string"
                        },
                        "contact": {
                            "description": "contact",
                            "type": "string"
                        },
                        "phone": {
                            "description": "phone",
                            "type": "integer"
                        },
                        "converted_to_vci": {
                            "description": "converted to vci",
                            "type": "integer"
                        },
                        "converted_date": {
                            "description": "converted date",
                            "type": "string"
                        },
                        "risk_owner": {
                            "description": "risk owner",
                            "type": "string"
                        },
                        "has_outstanding": {
                            "description": "has outstanding",
                            "type": "integer"
                        },
                        "explanation": {
                            "description": "explanation",
                            "type": "string"
                        },
                        "etag": {
                            "description": "Etag",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PortfolioPostData": {
            "properties": {
                "has_portfolio": {
                    "description": "has portfolio",
                    "type": "integer"
                },
                "projected_applications": {
                    "description": "projected applications",
                    "type": "string"
                },
                "expected_txn_per_month": {
                    "description": "expected transaction per month",
                    "type": "integer"
                },
                "expected_amount_per_month": {
                    "description": "expected amount per month",
                    "type": "integer"
                },
                "existing_portfolio": {
                    "description": "existing portfolio",
                    "type": "string"
                },
                "contact": {
                    "description": "contact",
                    "type": "string"
                },
                "phone": {
                    "description": "phone",
                    "type": "integer"
                },
                "converted_to_vci": {
                    "description": "converted to vci",
                    "type": "integer"
                },
                "risk_owner": {
                    "description": "risk owner",
                    "type": "string"
                },
                "has_outstanding": {
                    "description": "has outstanding",
                    "type": "integer"
                },
                "explanation": {
                    "description": "explanation",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PortfolioPutData": {
            "properties": {
                "has_portfolio": {
                    "description": "has portfolio",
                    "type": "integer"
                },
                "projected_applications": {
                    "description": "projected applications",
                    "type": "string"
                },
                "expected_txn_per_month": {
                    "description": "expected transaction per month",
                    "type": "integer"
                },
                "expected_amount_per_month": {
                    "description": "expected amount per month",
                    "type": "integer"
                },
                "existing_portfolio": {
                    "description": "existing portfolio",
                    "type": "string"
                },
                "contact": {
                    "description": "contact",
                    "type": "string"
                },
                "phone": {
                    "description": "phone",
                    "type": "integer"
                },
                "converted_to_vci": {
                    "description": "converted to vci",
                    "type": "integer"
                },
                "risk_owner": {
                    "description": "risk owner",
                    "type": "string"
                },
                "has_outstanding": {
                    "description": "has outstanding",
                    "type": "integer"
                },
                "explanation": {
                    "description": "explanation",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostTiredPricing": {
            "properties": {
                "fee_id": {
                    "description": "Fee Id",
                    "type": "string"
                },
                "max_amount_limit": {
                    "description": "Max Amount Limit",
                    "type": "integer"
                },
                "amount": {
                    "description": "Percentage",
                    "type": "integer"
                },
                "level": {
                    "description": "Level",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "VelocityChecksGetData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Api for get company velocitychecks list",
                    "properties": {
                        "has_approved": {
                            "description": "has_approved",
                            "type": "integer"
                        },
                        "has_check_duplicate": {
                            "description": "has_check_duplicate",
                            "type": "integer"
                        },
                        "has_nsf_decline": {
                            "description": "has_nsf_decline",
                            "type": "integer"
                        },
                        "has_default_velocity": {
                            "description": "has_default_velocity",
                            "type": "integer"
                        },
                        "max_checks_per_day": {
                            "description": "max_checks_per_day",
                            "type": "integer"
                        },
                        "max_amount_per_day": {
                            "description": "max_amount_per_day",
                            "type": "string"
                        },
                        "day_period_merchant": {
                            "description": "day_period_merchant",
                            "type": "integer"
                        },
                        "max_checks_per_day_per_acc": {
                            "description": "max_checks_per_day_per_acc",
                            "type": "integer"
                        },
                        "max_amount_per_day_per_acc": {
                            "description": "max_amount_per_day_per_acc",
                            "type": "string"
                        },
                        "day_period_account": {
                            "description": "day_period_account",
                            "type": "string"
                        },
                        "max_checks_per_period_per_acc": {
                            "description": "max_checks_per_period_per_acc",
                            "type": "integer"
                        },
                        "max_amount_per_period_per_acc": {
                            "description": "max_amount_per_period_per_acc",
                            "type": "string"
                        },
                        "highest_dollar_amount_per_txn": {
                            "description": "highest_dollar_amount_per_txn",
                            "type": "string"
                        },
                        "funding_time_id": {
                            "description": "funding_time_id",
                            "type": "string"
                        },
                        "velocity_type": {
                            "description": "velocity_type",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "VelocityChecksData": {
            "properties": {
                "data": {
                    "description": "Swagger Definition",
                    "type": "object",
                    "$ref": "#/definitions/Data"
                }
            },
            "type": "object"
        },
        "VelocityChecksPostData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Api for add company velocitychecks list",
                    "properties": {
                        "has_approved": {
                            "description": "has_approved",
                            "type": "integer"
                        },
                        "has_check_duplicate": {
                            "description": "has_check_duplicate",
                            "type": "integer"
                        },
                        "has_nsf_decline": {
                            "description": "has_nsf_decline",
                            "type": "integer"
                        },
                        "has_default_velocity": {
                            "description": "has_default_velocity",
                            "type": "integer"
                        },
                        "max_checks_per_day": {
                            "description": "max_checks_per_day",
                            "type": "integer"
                        },
                        "max_amount_per_day": {
                            "description": "max_amount_per_day",
                            "type": "string"
                        },
                        "day_period_merchant": {
                            "description": "day_period_merchant",
                            "type": "integer"
                        },
                        "max_checks_per_day_per_acc": {
                            "description": "max_checks_per_day_per_acc",
                            "type": "integer"
                        },
                        "max_amount_per_day_per_acc": {
                            "description": "max_amount_per_day_per_acc",
                            "type": "string"
                        },
                        "day_period_account": {
                            "description": "day_period_account",
                            "type": "string"
                        },
                        "max_checks_per_period_per_acc": {
                            "description": "max_checks_per_period_per_acc",
                            "type": "integer"
                        },
                        "max_amount_per_period_per_acc": {
                            "description": "max_amount_per_period_per_acc",
                            "type": "string"
                        },
                        "highest_dollar_amount_per_txn": {
                            "description": "highest_dollar_amount_per_txn",
                            "type": "string"
                        },
                        "funding_time_id": {
                            "description": "funding_time_id",
                            "type": "string"
                        },
                        "velocity_type": {
                            "description": "velocity_type",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "VelocityChecksPutData": {
            "properties": {
                "has_approved": {
                    "description": "has_approved",
                    "type": "integer"
                },
                "has_check_duplicate": {
                    "description": "has_check_duplicate",
                    "type": "integer"
                },
                "has_nsf_decline": {
                    "description": "has_nsf_decline",
                    "type": "integer"
                },
                "has_default_velocity": {
                    "description": "has_default_velocity",
                    "type": "integer"
                },
                "max_checks_per_day": {
                    "description": "max_checks_per_day",
                    "type": "integer"
                },
                "max_amount_per_day": {
                    "description": "max_amount_per_day",
                    "type": "string"
                },
                "day_period_merchant": {
                    "description": "day_period_merchant",
                    "type": "integer"
                },
                "max_checks_per_day_per_acc": {
                    "description": "max_checks_per_day_per_acc",
                    "type": "integer"
                },
                "max_amount_per_day_per_acc": {
                    "description": "max_amount_per_day_per_acc",
                    "type": "string"
                },
                "day_period_account": {
                    "description": "day_period_account",
                    "type": "string"
                },
                "max_checks_per_period": {
                    "description": "max_checks_per_period",
                    "type": "integer"
                },
                "max_amount_per_period": {
                    "description": "max_amount_per_period",
                    "type": "string"
                },
                "max_checks_per_period_per_acc": {
                    "description": "max_checks_per_period_per_acc",
                    "type": "integer"
                },
                "max_amount_per_period_per_acc": {
                    "description": "max_amount_per_period_per_acc",
                    "type": "string"
                },
                "highest_dollar_amount_per_txn": {
                    "description": "highest_dollar_amount_per_txn",
                    "type": "string"
                },
                "funding_time_id": {
                    "description": "funding_time_id",
                    "type": "string"
                },
                "velocity_type": {
                    "description": "velocity_type",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "VelocityCheckDeleteData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetCompanyVelocitycheck": {
            "properties": {
                "data": {
                    "description": "Get Company VelocityChecks",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VelocityChecksGetData"
                    }
                }
            },
            "type": "object"
        },
        "GroupGetData": {
            "properties": {
                "data": {
                    "description": "Definition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupData"
                    }
                },
                "meta": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "GroupPostData": {
            "properties": {
                "name": {
                    "description": "group name",
                    "type": "string"
                },
                "type": {
                    "description": "group type",
                    "type": "string"
                },
                "status": {
                    "description": "status active or inactive",
                    "type": "integer"
                },
                "description": {
                    "description": "name",
                    "type": "string"
                },
                "created_by": {
                    "description": "group created by",
                    "type": "string"
                },
                "updated_by": {
                    "description": "group updated by",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupPutData": {
            "properties": {
                "name": {
                    "description": "group name",
                    "type": "string"
                },
                "type": {
                    "description": "group type",
                    "type": "string"
                },
                "description": {
                    "description": "name",
                    "type": "string"
                },
                "status": {
                    "description": "status active or inactive",
                    "type": "integer"
                },
                "updated_by": {
                    "description": "group updated by",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupDeleteData": {
            "properties": {
                "id": {
                    "description": "group id",
                    "type": "string"
                },
                "status": {
                    "description": "status as deleted",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Definition",
                    "properties": {
                        "name": {
                            "description": "group name",
                            "type": "string"
                        },
                        "type": {
                            "description": "group type",
                            "type": "string"
                        },
                        "status": {
                            "description": "status active or inactive",
                            "type": "integer"
                        },
                        "description": {
                            "description": "group description",
                            "type": "string"
                        },
                        "created_by": {
                            "description": "group created by",
                            "type": "string"
                        },
                        "updated_by": {
                            "description": "group updated by",
                            "type": "string"
                        },
                        "created_at": {
                            "description": "group created at",
                            "type": "integer"
                        },
                        "etag": {
                            "description": "group updated at",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SecCodeGetData": {
            "properties": {
                "data": {
                    "description": "Definition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecCodeData"
                    }
                },
                "meta": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Definition",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "SecCodeData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Definition",
                    "properties": {
                        "code": {
                            "description": "sec code",
                            "type": "string"
                        },
                        "description": {
                            "description": "group description",
                            "type": "string"
                        },
                        "status": {
                            "description": "status active or inactive",
                            "type": "integer"
                        },
                        "created_at": {
                            "description": "group created at",
                            "type": "integer"
                        },
                        "etag": {
                            "description": "group updated at",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UserGetData": {
            "properties": {
                "data": {
                    "description": "Get all directory users from azure active directory",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserData"
                    }
                },
                "meta": {
                    "description": "Get all directory users from azure active directory",
                    "type": "object",
                    "$ref": "#/definitions/Meta"
                },
                "links": {
                    "description": "Get all directory users from azure active directory",
                    "type": "object",
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object"
        },
        "UserFetchData": {
            "properties": {
                "data": {
                    "description": "Get the user's list with dingo api",
                    "type": "object",
                    "$ref": "#/definitions/Data"
                }
            },
            "type": "object"
        },
        "UserCreateData": {
            "properties": {
                "first_name": {
                    "description": "Firstname of user",
                    "type": "string"
                },
                "last_name": {
                    "description": "Surname of user",
                    "type": "string"
                },
                "email": {
                    "description": "Personnel email id",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "confirm_pwd": {
                    "description": "confirm password field",
                    "type": "string"
                },
                "mobile_no": {
                    "description": "Primary mobile number",
                    "type": "string"
                },
                "address": {
                    "description": "Address of the user",
                    "type": "string"
                },
                "pincode": {
                    "description": "Postal code",
                    "type": "string"
                },
                "company_id": {
                    "description": "Individual company id of user",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserPutData": {
            "properties": {
                "first_name": {
                    "description": "first name of user",
                    "type": "string"
                },
                "last_name": {
                    "description": "Last name of user",
                    "type": "string"
                },
                "mobile_no": {
                    "description": "Phone no of user",
                    "type": "string"
                },
                "address": {
                    "description": "Address of user",
                    "type": "string"
                },
                "pincode": {
                    "description": "Pincode of user",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserDeleteData": {
            "properties": {
                "id": {
                    "description": "user id",
                    "type": "string"
                },
                "status": {
                    "description": "status as deleted",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserData": {
            "properties": {
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "attributes": {
                    "description": "Definition",
                    "properties": {
                        "first_name": {
                            "description": "first name of user",
                            "type": "string"
                        },
                        "last_name": {
                            "description": "Last name of user",
                            "type": "string"
                        },
                        "email": {
                            "description": "Email of user",
                            "type": "string"
                        },
                        "mobile_no": {
                            "description": "Phone no of user",
                            "type": "string"
                        },
                        "address": {
                            "description": "Address of user",
                            "type": "string"
                        },
                        "pincode": {
                            "description": "Pincode of user",
                            "type": "string"
                        },
                        "status": {
                            "description": "User current status",
                            "type": "boolean"
                        },
                        "etag": {
                            "description": "Etag of user",
                            "type": "string"
                        },
                        "created_date": {
                            "description": "Created date of user",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        },
        "phoenix_auth": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://login.microsoftonline.com/testphoenixdomain.onmicrosoft.com/oauth2/v2.0/authorize",
            "scopes": {
                "read:post": "read your post",
                "write:post": "modify post in your account"
            }
        }
    }
}